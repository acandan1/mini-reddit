<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= title %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    // Tailwind dark mode configuration
    tailwind.config = {
      darkMode: 'class',
    }
  </script>
  <style>
    .post-content img { max-width: 100%; height: auto; border-radius: 0.5rem; }
    .post-content video { max-width: 100%; height: auto; border-radius: 0.5rem; }
    
    /* Comment depth styling - consistent colored borders for threading */
    .comment-depth-0 { margin-left: 0; padding: 0.75rem; background: #f9fafb; border-radius: 0.5rem; margin-bottom: 0.75rem; max-width: 100%; box-sizing: border-box; overflow-wrap: break-word; }
    .dark .comment-depth-0 { background: #111827; }
    .comment-depth-1, .comment-depth-2, .comment-depth-3, .comment-depth-4, .comment-depth-5 { 
      margin-left: 1rem; 
      border-left: 3px solid #9ca3af;
      padding-left: 0.75rem; 
      padding-top: 0.5rem; 
      padding-bottom: 0.5rem; 
      max-width: 100%; 
      box-sizing: border-box; 
      overflow-wrap: break-word;
    }
    .dark .comment-depth-1, .dark .comment-depth-2, .dark .comment-depth-3, .dark .comment-depth-4, .dark .comment-depth-5 {
      border-left-color: #6b7280;
    }
    
    @media (max-width: 640px) {
      .comment-depth-0 { padding: 0.5rem; margin-bottom: 0.5rem; }
      .comment-depth-1, .comment-depth-2, .comment-depth-3, .comment-depth-4, .comment-depth-5 { 
        margin-left: 0.5rem; 
        padding-left: 0.5rem;
        border-left-width: 2px;
      }
    }
    
    .comment-body { line-height: 1.6; word-wrap: break-word; overflow-wrap: break-word; }
    .comment-body a { color: #ea580c; text-decoration: underline; word-break: break-all; }
    .dark .comment-body a { color: #fb923c; }
    .comment-body p { margin-bottom: 0.75rem; word-wrap: break-word; overflow-wrap: break-word; }
    .comment-body pre { background: #f3f4f6; padding: 0.75rem; border-radius: 0.375rem; overflow-x: auto; font-size: 0.875rem; word-wrap: break-word; overflow-wrap: break-word; }
    .dark .comment-body pre { background: #1f2937; color: #e5e7eb; }
    .comment-body code { background: #f3f4f6; padding: 0.125rem 0.375rem; border-radius: 0.25rem; font-size: 0.875em; font-family: monospace; word-wrap: break-word; overflow-wrap: break-word; }
    .dark .comment-body code { background: #1f2937; color: #e5e7eb; }
    .comment-body ul, .comment-body ol { margin-left: 1.5rem; margin-bottom: 0.75rem; }
    .comment-body li { margin-bottom: 0.25rem; }
    
    /* Prevent text overflow */
    .comment-body, .comment-body * { max-width: 100%; box-sizing: border-box; }
    
    /* Comment header - prevent overflow */
    .comment-header { 
      display: flex; 
      align-items: center; 
      gap: 0.5rem; 
      flex-wrap: wrap;
      min-width: 0; /* Allow flex items to shrink below their content size */
    }
    .comment-username { 
      word-wrap: break-word; 
      overflow-wrap: break-word; 
      word-break: break-all;
      min-width: 0; /* Allow username to shrink */
      flex-shrink: 1;
      max-width: 100%;
    }
    .comment-score { 
      flex-shrink: 0; /* Don't shrink the score */
      white-space: nowrap;
    }
    
    /* Collapsible comment styles */
    .comment-toggle { 
      cursor: pointer; 
      user-select: none;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
      font-size: 0.75rem;
      color: #6b7280;
      margin-right: 0.5rem;
      flex-shrink: 0; /* Don't shrink the toggle button */
    }
    .dark .comment-toggle { color: #9ca3af; }
    .comment-toggle:hover { color: #ea580c; }
    .dark .comment-toggle:hover { color: #fb923c; }
    .comment-content { transition: opacity 0.2s; }
    .comment-content.collapsed { display: none; }
    .comment-toggle-icon { display: inline-block; transition: transform 0.2s; }
    .comment-toggle-icon.collapsed { transform: rotate(-90deg); }
  </style>
  <script>
    // Dark mode initialization - runs immediately to prevent flash
    (function() {
      const darkMode = localStorage.getItem('darkMode') === 'true';
      if (darkMode) {
        document.documentElement.classList.add('dark');
      }
    })();
  </script>
</head>
<body class="bg-gray-50 dark:bg-[#0f0f0f] min-h-screen transition-colors">
  <header class="bg-white dark:bg-[#1a1a1a] border-b dark:border-gray-800 sm:sticky top-0 z-10 shadow-sm">
    <div class="max-w-6xl mx-auto px-2 sm:px-4 py-2 sm:py-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-2 sm:gap-3">
          <a href="/feed" class="text-base sm:text-xl font-bold text-orange-600 dark:text-orange-500 hover:text-orange-700 dark:hover:text-orange-400">‚Üê Mini-Reddit</a>
        </div>
        <div class="flex items-center gap-2 sm:gap-4 text-xs sm:text-sm">
          <button id="dark-mode-toggle" class="p-1.5 sm:p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" aria-label="Toggle dark mode">
            <span id="dark-mode-icon" class="text-base sm:text-lg">üåô</span>
          </button>
          <span class="hidden sm:inline text-gray-600 dark:text-gray-300">Hi, <strong><%= username %></strong></span>
          <a class="text-orange-600 dark:text-orange-500 hover:underline font-medium" href="/logout">Logout</a>
        </div>
      </div>
    </div>
  </header>

  <main class="max-w-4xl mx-auto px-3 sm:px-4 py-4 sm:py-6">
    <!-- Post Card -->
    <article class="bg-white dark:bg-[#1a1a1a] rounded-lg shadow-sm mb-4 sm:mb-6 overflow-hidden">
      <div class="p-4 sm:p-6">
        <div class="flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400 mb-3">
          <a href="/r/<%= post.subreddit %>" class="font-semibold text-orange-600 dark:text-orange-500 hover:underline">r/<%= post.subreddit %></a>
          <span>‚Ä¢</span>
          <span>Posted by u/<%= post.author %></span>
          <span>‚Ä¢</span>
          <span class="hidden sm:inline"><%= new Date(post.createdUtc * 1000).toLocaleString() %></span>
          <span class="sm:hidden"><%= new Date(post.createdUtc * 1000).toLocaleDateString() %></span>
        </div>

        <h1 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4"><%= post.title %></h1>

        <div class="post-content mb-4">
          <% if (post.selftext && post.selftext.length > 0) { %>
            <div class="prose prose-sm sm:prose max-w-none text-gray-700 dark:text-gray-300 whitespace-pre-wrap mb-4"><%= post.selftext %></div>
          <% } %>

          <% if (post.hasImage && post.imageUrl) { %>
            <img src="<%= post.imageUrl %>" alt="Post image" class="max-w-full h-auto rounded-lg mb-4" />
          <% } else if (post.hasVideo && post.videoUrl) { %>
            <% if (post.audioUrl && post.hasAudioTrack) { %>
              <!-- Reddit video with separate audio track -->
              <div class="mb-4">
                <video id="reddit-video-<%= post.id %>" controls class="max-w-full h-auto rounded-lg">
                  <source src="<%= post.videoUrl %>" type="video/mp4" />
                  Your browser does not support the video tag.
                </video>
                <audio id="reddit-audio-<%= post.id %>" src="<%= post.audioUrl %>" style="display:none;" preload="auto"></audio>
                <script>
                  (function() {
                    const video = document.getElementById('reddit-video-<%= post.id %>');
                    const audio = document.getElementById('reddit-audio-<%= post.id %>');
                    if (video && audio) {
                      let audioLoaded = false;
                      
                      // Check if audio loads successfully
                      audio.addEventListener('loadeddata', () => { audioLoaded = true; });
                      audio.addEventListener('error', () => { 
                        console.warn('Audio track failed to load for video <%= post.id %>');
                        audioLoaded = false;
                      });
                      
                      // Sync audio with video
                      video.addEventListener('play', () => { if (audioLoaded) audio.play().catch(e => console.warn('Audio play failed:', e)); });
                      video.addEventListener('pause', () => { if (audioLoaded) audio.pause(); });
                      video.addEventListener('seeked', () => { if (audioLoaded) audio.currentTime = video.currentTime; });
                      video.addEventListener('volumechange', () => { if (audioLoaded) audio.volume = video.volume; });
                      video.addEventListener('ratechange', () => { if (audioLoaded) audio.playbackRate = video.playbackRate; });
                    }
                  })();
                </script>
              </div>
            <% } else { %>
              <video controls class="max-w-full h-auto rounded-lg mb-4">
                <source src="<%= post.videoUrl %>" type="video/mp4" />
                Your browser does not support the video tag.
              </video>
            <% } %>
          <% } else if (post.hasGallery && post.galleryItems.length > 0) { %>
            <div class="space-y-3 mb-4">
              <% post.galleryItems.forEach(function(item) { %>
                <img src="<%= item.url %>" alt="Gallery image" class="max-w-full h-auto rounded-lg" />
              <% }) %>
            </div>
          <% } %>

          <% if (post.url && !post.url.includes('reddit.com') && !post.hasImage && !post.hasVideo && !post.hasGallery) { %>
            <div class="bg-gray-100 dark:bg-gray-900 p-3 rounded-lg text-sm">
              <span class="text-gray-600 dark:text-gray-300">External link:</span>
              <a href="<%= post.url %>" target="_blank" rel="noreferrer" class="text-orange-600 dark:text-orange-500 hover:underline break-all ml-2">
                <%= post.url %>
              </a>
            </div>
          <% } %>
        </div>

        <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 pt-3 border-t dark:border-gray-700">
          <span class="flex items-center gap-1 font-medium">
            <span>‚¨ÜÔ∏è</span>
            <span><%= post.score %> upvotes</span>
          </span>
          <span class="flex items-center gap-1">
            <span>üí¨</span>
            <span><%= post.numComments %> comments</span>
          </span>
        </div>
      </div>
    </article>

    <!-- Comments Section -->
    <div class="bg-white dark:bg-[#1a1a1a] rounded-lg shadow-sm p-4 sm:p-6">
      <div class="flex items-center gap-2 mb-6">
        <h2 class="text-lg sm:text-xl font-bold text-gray-900 dark:text-gray-100">üí¨ Comments</h2>
        <span class="text-sm text-gray-500 dark:text-gray-400">(<%= comments ? comments.length : 0 %> top-level)</span>
      </div>
      
      <% if (!comments || comments.length === 0) { %>
        <div class="text-center py-8 text-gray-500 dark:text-gray-400">
          <p class="text-lg mb-1">No comments yet</p>
          <p class="text-sm">Be the first to comment!</p>
        </div>
      <% } else { %>
        <div class="space-y-1">
          <%
            let commentIdCounter = 0;
            function renderComment(comment) {
              const depthClass = `comment-depth-${Math.min(comment.depth, 5)}`;
              const scoreColor = comment.score > 100 ? 'text-orange-600 dark:text-orange-500 font-bold' : comment.score > 10 ? 'text-orange-500 dark:text-orange-400 font-semibold' : 'text-gray-600 dark:text-gray-400';
              const commentId = `comment-${commentIdCounter++}`;
              const hasReplies = comment.replies && comment.replies.length > 0;
          %>
            <div class="<%= depthClass %>">
              <div class="comment-header mb-2">
                <button class="comment-toggle" onclick="toggleComment('<%= commentId %>')" aria-label="Toggle comment">
                  <span class="comment-toggle-icon" id="<%= commentId %>-icon">‚ñº</span>
                </button>
                <span class="comment-username text-sm font-bold text-gray-800 dark:text-gray-200">u/<%= comment.author %></span>
                <span class="comment-score text-xs <%= scoreColor %> flex items-center gap-1">
                  <span>‚¨ÜÔ∏è</span>
                  <span><%= comment.score %></span>
                </span>
              </div>
              <div class="comment-content" id="<%= commentId %>-content">
                <div class="text-sm text-gray-900 dark:text-gray-300 comment-body"><%= comment.body %></div>
                
                <% if (hasReplies) { %>
                  <div class="mt-2 space-y-1">
                    <% comment.replies.forEach(function(reply) { %>
                      <% renderComment(reply); %>
                    <% }); %>
                  </div>
                <% } %>
              </div>
            </div>
          <%
            }
            comments.forEach(function(comment) {
              renderComment(comment);
            });
          %>
        </div>
      <% } %>
    </div>
  </main>

  <footer class="text-center text-xs text-gray-500 dark:text-gray-400 py-6 mt-8">
    <p>Powered by Reddit JSON API ‚Ä¢ Self-hosted ‚Ä¢ No tracking</p>
  </footer>
  <link rel="stylesheet" href="/public/styles.css" />
  <script>
    // Dark mode toggle functionality
    (function() {
      const toggle = document.getElementById('dark-mode-toggle');
      const icon = document.getElementById('dark-mode-icon');
      
      function updateIcon(isDark) {
        icon.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
      }
      
      // Set initial icon
      const isDark = document.documentElement.classList.contains('dark');
      updateIcon(isDark);
      
      toggle.addEventListener('click', function() {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('darkMode', isDark);
        updateIcon(isDark);
      });
    })();
    
    // Comment collapse/expand functionality
    function toggleComment(commentId) {
      const content = document.getElementById(commentId + '-content');
      const icon = document.getElementById(commentId + '-icon');
      
      if (content && icon) {
        const isCollapsed = content.classList.contains('collapsed');
        
        if (isCollapsed) {
          content.classList.remove('collapsed');
          icon.classList.remove('collapsed');
        } else {
          content.classList.add('collapsed');
          icon.classList.add('collapsed');
        }
      }
    }
  </script>
</body>
</html>

